@model PagedList.IPagedList<ProyectoTesis.Models.Movement>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Movimientos";
}

<h2>Movimientos de Almacén</h2>

<p>
    @Html.ActionLink("Nuevo", "Create")
</p>

@using (Html.BeginForm("Index", "Movement", FormMethod.Get))
{
    <p>
        Buscar: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Buscar" />
    </p>
}


<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Documento", "Index", new { sortOrder = ViewBag.DocumentSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Descripción", "Index", new { sortOrder = ViewBag.DescriptionSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Tipo de Movimiento
        </th>
        <th>
            Cajas
        </th>
        <th>
            Fracciones
        </th>
        <th>
            @Html.ActionLink("Fecha", "Index", new { sortOrder = ViewBag.MovementDateSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Document.ID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Product.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MovementType)
        </td>
        <td>
            @if (item.MovementType == ProyectoTesis.Models.MovementType.Despacho || item.MovementType == ProyectoTesis.Models.MovementType.Pérdida)
            {
                <span>-</span>
            }
            @Html.DisplayFor(modelItem => item.BoxUnits)
        </td>
        <td>
            @if (item.MovementType == ProyectoTesis.Models.MovementType.Despacho || item.MovementType == ProyectoTesis.Models.MovementType.Pérdida)
            {
                <span>-</span>
            }
            @Html.DisplayFor(modelItem => item.FractionUnits)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MovementDate)
        </td>
        <td>
            @if (item.MovementType == ProyectoTesis.Models.MovementType.Compra || item.MovementType == ProyectoTesis.Models.MovementType.Despacho)
                {
                <a href = "@Url.Action("Details", new { id = item.ID })" ><i class="fa fa-eye"></i></a>
                }
                else
                {            
                <a href="@Url.Action("Edit", new { id = item.ID })"><i class="fa fa-pencil"></i></a> 
                <a href="@Url.Action("Details", new { id = item.ID })"> | <i class="fa fa-eye"></i></a>
                <a href="@Url.Action("Delete", new { id = item.ID })"> | <i class="fa fa-trash"></i></a>
                }
        </td>
    </tr>
}

</table>

<br />
Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
